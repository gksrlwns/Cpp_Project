#include <iostream>


typedef int 정수;
typedef __int8 int8;
typedef __int16 int16;
typedef __int32 int32;
typedef __int64 int64;


using namespace std;

void main()
{
	//typedef

	//type define

	// define => 매크로 전역으로 무언가를 선언하는 역할

	// type define => 타입을 선언해주는 역할

	정수 a = 0;
	int32 id = 1000;


	// 자료형설명
	// 프로그래밍 첫날이라서 가볍게 설명한감이 있습니다.

	// 자료형에 대해서 조금 디테일하게 설명할게요.
	// 자료형의 종류가 생각보다 많습니다.
	// 그중에 자주쓰는게
	// int, float, char, string, bool
	// 이정도인 거에요.

	// __int8, __int16, __int32
	// 등등 되게 많습니다.

	// __int8 ==> 정수형
	// __int32 ==> 정수형
	// __int16 ==> 정수형

	// 모든 정수를 담을수있지 않아요.
	// 저희가 지금까지 배운 int 
	// 이거 21억까지밖에 못담습니다.

	int myValue = 21000000000;
	cout << myValue << endl;

	// 모든 변수는
	// 메모리에 기억합니다.
	// RAM << 16GB, 32GB
	// 저장을하려면 특정 공간을 할당받아야겟죠.

	// int => RAM에서 4byte를 할당받아서 사용합니다.
	// 4byte에서 표현할수있는 숫자의 한계가 있습니다.

	// 이게뭔소리냐
	// 컴퓨터는 모든걸 0과 1로 표현한다.
	// 0과 1라는 표현은 BIT입니다.
	// 1bit
	// 1byte => 8bit
	// 1024byte => 1kb

	// 0000 0000 => 2진수
	// 1111 1111 => 0 ~ 511
	// 0000 0000 0000 0000 0000 0000 0000 0000 
	// => 이게 곧 4byte (int)가 표현할수있는 숫자의 한계
	// 0 ~ 42억쯤  (2의 32제곱 - 1)
	// 양수만 표현하는게 아니죠
	// 음수도 표현합니다.
	// 그렇기 때문에 -21억 ~ 21억까지 표현이 가능합니다.

	// 메이플스토리 골드보면 21억이 넘는데 그건 int가 아닌가요?
	// __int64 이변수가
	// 64비트짜리 정수라는 뜻입니다.

	// 어 그러면 
	// 애초에 모든 변수를 int64로 하는게 좋지않을까요?
	// 
	// 살짝 딥한데
	// CPU 아키텍처
	// intel, AMD 
	//  => 이득볼수있는 자료형이 어셈블리형태 
	// 좀 빠르게 변수에 접근할수있는 자료형이 int에요
	// 그렇기때문에 웬만하면 int씁니다

	// 메모리아끼려면 int8도 당연히 좋아요.


	// 컴퓨터사이언스지식이
	// 면접용 지식따로있고
	// 개인적인 용도로 알아두면 좋은거 따로있고해서

	// 틈나면 천천히 할게요.
	// CS 지식은 진짜 쓸모없습니다.
	// 나중에 혼자 다른쪽기술을 배울때 참고지식이 되어준다 정도에요.
}